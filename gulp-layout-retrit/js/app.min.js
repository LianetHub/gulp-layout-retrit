/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n// Инициализация Fancybox\r\nif (typeof Fancybox !== \"undefined\" && Fancybox !== null) {\r\n    Fancybox.bind(\"[data-fancybox]\", {\r\n        dragToClose: false,\r\n        closeButton: false\r\n    });\r\n}\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    // Определение ОС пользователя\r\n    const isMobile = {\r\n        Android: () => /Android/i.test(navigator.userAgent),\r\n        BlackBerry: () => /BlackBerry/i.test(navigator.userAgent),\r\n        iOS: () => /iPhone|iPad|iPod/i.test(navigator.userAgent),\r\n        Opera: () => /Opera Mini/i.test(navigator.userAgent),\r\n        Windows: () => /IEMobile/i.test(navigator.userAgent),\r\n        any: function () {\r\n            return this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows();\r\n        },\r\n    };\r\n\r\n    function getNavigator() {\r\n        if (isMobile.any() || window.innerWidth < 992) {\r\n            document.body.classList.remove('_pc');\r\n            document.body.classList.add('_touch');\r\n        } else {\r\n            document.body.classList.remove('_touch');\r\n            document.body.classList.add('_pc');\r\n        }\r\n    }\r\n\r\n    getNavigator();\r\n    window.addEventListener('resize', getNavigator);\r\n\r\n    // Обработчик событий\r\n    document.addEventListener('click', (e) => {\r\n        if (e.target.closest('.header__menu-toggler')) {\r\n            toggleMenu();\r\n        }\r\n    });\r\n\r\n    function toggleMenu() {\r\n        document.body.classList.toggle('lock');\r\n        document.querySelector('.header').classList.toggle('open-menu');\r\n    }\r\n\r\n    // Инициализация слайдеров\r\n    if (document.querySelector('.place__slider')) {\r\n        new Swiper('.place__slider', {\r\n            slidesPerView: 1,\r\n            loop: true,\r\n            navigation: {\r\n                nextEl: '.place__next',\r\n                prevEl: '.place__prev',\r\n            },\r\n        });\r\n    }\r\n\r\n    if (document.querySelector('.reviews__slider')) {\r\n        new Swiper('.reviews__slider', {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 10,\r\n            breakpoints: {\r\n                767.98: {\r\n                    spaceBetween: 20,\r\n                },\r\n                991.98: {\r\n                    spaceBetween: 30,\r\n                },\r\n                1199.98: {\r\n                    spaceBetween: 40,\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // spollers\r\n\r\n    const spollersArray = document.querySelectorAll(\"[data-spollers]\");\r\n    if (spollersArray.length > 0) {\r\n\r\n        const spollersRegular = Array.from(spollersArray).filter(function (\r\n            item,\r\n            index,\r\n            self\r\n        ) {\r\n            return !item.dataset.spollers.split(\",\")[0];\r\n        });\r\n\r\n        if (spollersRegular.length > 0) {\r\n            initSpollers(spollersRegular);\r\n        }\r\n\r\n        const spollersMedia = Array.from(spollersArray).filter(function (\r\n            item,\r\n            index,\r\n            self\r\n        ) {\r\n            return item.dataset.spollers.split(\",\")[0];\r\n        });\r\n\r\n        if (spollersMedia.length > 0) {\r\n            const breakpointsArray = [];\r\n            spollersMedia.forEach((item) => {\r\n                const params = item.dataset.spollers;\r\n                const breakpoint = {};\r\n                const paramsArray = params.split(\",\");\r\n                breakpoint.value = paramsArray[0];\r\n                breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : \"max\";\r\n                breakpoint.item = item;\r\n                breakpointsArray.push(breakpoint);\r\n            });\r\n\r\n\r\n            let mediaQueries = breakpointsArray.map(function (item) {\r\n                return (\r\n                    \"(\" +\r\n                    item.type +\r\n                    \"-width: \" +\r\n                    item.value +\r\n                    \"px),\" +\r\n                    item.value +\r\n                    \",\" +\r\n                    item.type\r\n                );\r\n            });\r\n            mediaQueries = mediaQueries.filter(function (item, index, self) {\r\n                return self.indexOf(item) === index;\r\n            });\r\n\r\n\r\n            mediaQueries.forEach((breakpoint) => {\r\n                const paramsArray = breakpoint.split(\",\");\r\n                const mediaBreakpoint = paramsArray[1];\r\n                const mediaType = paramsArray[2];\r\n                const matchMedia = window.matchMedia(paramsArray[0]);\r\n\r\n                const spollersArray = breakpointsArray.filter(function (item) {\r\n                    if (item.value === mediaBreakpoint && item.type === mediaType) {\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                if (matchMedia.removeEventListener) {\r\n                    matchMedia.removeEventListener(\"change\", () => {\r\n                        initSpollers(spollersArray, matchMedia);\r\n                    });\r\n                }\r\n                initSpollers(spollersArray, matchMedia);\r\n            });\r\n        }\r\n\r\n\r\n        function initSpollers(spollersArray, matchMedia = false) {\r\n            spollersArray.forEach((spollersBlock) => {\r\n                spollersBlock = matchMedia ? spollersBlock.item : spollersBlock;\r\n                if (matchMedia.matches || !matchMedia) {\r\n                    spollersBlock.classList.add(\"_init\");\r\n                    initSpollerBody(spollersBlock);\r\n                    spollersBlock.addEventListener(\"click\", setSpollerAction);\r\n                } else {\r\n                    spollersBlock.classList.remove(\"_init\");\r\n                    initSpollerBody(spollersBlock, false);\r\n                    spollersBlock.removeEventListener(\"click\", setSpollerAction);\r\n                }\r\n            });\r\n        }\r\n\r\n        function initSpollerBody(spollersBlock, hideSpollerBody = true) {\r\n            const spollerTitles = spollersBlock.querySelectorAll(\"[data-spoller]\");\r\n            if (spollerTitles.length > 0) {\r\n                spollerTitles.forEach((spollerTitle) => {\r\n                    if (hideSpollerBody) {\r\n                        spollerTitle.removeAttribute(\"tabindex\");\r\n                        if (!spollerTitle.classList.contains(\"_active\")) {\r\n                            spollerTitle.nextElementSibling.hidden = true;\r\n                        }\r\n                    } else {\r\n                        spollerTitle.setAttribute(\"tabindex\", \"-1\");\r\n                        spollerTitle.nextElementSibling.hidden = false;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function setSpollerAction(e) {\r\n            const el = e.target;\r\n            if (el.hasAttribute(\"data-spoller\") || el.closest(\"[data-spoller]\")) {\r\n                const spollerTitle = el.hasAttribute(\"data-spoller\")\r\n                    ? el\r\n                    : el.closest(\"[data-spoller]\");\r\n                const spollersBlock = spollerTitle.closest(\"[data-spollers]\");\r\n                const oneSpoller = spollersBlock.hasAttribute(\"data-one-spoller\")\r\n                    ? true\r\n                    : false;\r\n                if (!spollersBlock.querySelectorAll(\"._slide\").length) {\r\n                    if (oneSpoller && !spollerTitle.classList.contains(\"_active\")) {\r\n                        hideSpollersBody(spollersBlock);\r\n                    }\r\n                    spollerTitle.classList.toggle(\"_active\");\r\n                    spollerTitle.nextElementSibling.slideToggle(300);\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        }\r\n\r\n        function hideSpollersBody(spollersBlock) {\r\n            const spollerActiveTitle = spollersBlock.querySelector(\r\n                \"[data-spoller]._active\"\r\n            );\r\n            if (spollerActiveTitle) {\r\n                spollerActiveTitle.classList.remove(\"_active\");\r\n                spollerActiveTitle.nextElementSibling.slideUp(300);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n//  init slide toggle\r\n\r\nHTMLElement.prototype.slideToggle = function (duration, callback) {\r\n    if (this.clientHeight === 0) {\r\n        _s(this, duration, callback, true);\r\n    } else {\r\n        _s(this, duration, callback);\r\n    }\r\n};\r\n\r\nHTMLElement.prototype.slideUp = function (duration, callback) {\r\n    _s(this, duration, callback);\r\n};\r\n\r\nHTMLElement.prototype.slideDown = function (duration, callback) {\r\n    _s(this, duration, callback, true);\r\n};\r\n\r\nfunction _s(el, duration, callback, isDown) {\r\n\r\n    if (typeof duration === 'undefined') duration = 400;\r\n    if (typeof isDown === 'undefined') isDown = false;\r\n\r\n    el.style.overflow = \"hidden\";\r\n    if (isDown) el.style.display = \"block\";\r\n\r\n    var elStyles = window.getComputedStyle(el);\r\n\r\n    var elHeight = parseFloat(elStyles.getPropertyValue('height'));\r\n    var elPaddingTop = parseFloat(elStyles.getPropertyValue('padding-top'));\r\n    var elPaddingBottom = parseFloat(elStyles.getPropertyValue('padding-bottom'));\r\n    var elMarginTop = parseFloat(elStyles.getPropertyValue('margin-top'));\r\n    var elMarginBottom = parseFloat(elStyles.getPropertyValue('margin-bottom'));\r\n\r\n    var stepHeight = elHeight / duration;\r\n    var stepPaddingTop = elPaddingTop / duration;\r\n    var stepPaddingBottom = elPaddingBottom / duration;\r\n    var stepMarginTop = elMarginTop / duration;\r\n    var stepMarginBottom = elMarginBottom / duration;\r\n\r\n    var start;\r\n\r\n    function step(timestamp) {\r\n\r\n        if (start === undefined) start = timestamp;\r\n\r\n        var elapsed = timestamp - start;\r\n\r\n        if (isDown) {\r\n            el.style.height = (stepHeight * elapsed) + \"px\";\r\n            el.style.paddingTop = (stepPaddingTop * elapsed) + \"px\";\r\n            el.style.paddingBottom = (stepPaddingBottom * elapsed) + \"px\";\r\n            el.style.marginTop = (stepMarginTop * elapsed) + \"px\";\r\n            el.style.marginBottom = (stepMarginBottom * elapsed) + \"px\";\r\n        } else {\r\n            el.style.height = elHeight - (stepHeight * elapsed) + \"px\";\r\n            el.style.paddingTop = elPaddingTop - (stepPaddingTop * elapsed) + \"px\";\r\n            el.style.paddingBottom = elPaddingBottom - (stepPaddingBottom * elapsed) + \"px\";\r\n            el.style.marginTop = elMarginTop - (stepMarginTop * elapsed) + \"px\";\r\n            el.style.marginBottom = elMarginBottom - (stepMarginBottom * elapsed) + \"px\";\r\n        }\r\n\r\n        if (elapsed >= duration) {\r\n            el.style.height = \"\";\r\n            el.style.paddingTop = \"\";\r\n            el.style.paddingBottom = \"\";\r\n            el.style.marginTop = \"\";\r\n            el.style.marginBottom = \"\";\r\n            el.style.overflow = \"\";\r\n            if (!isDown) el.style.display = \"none\";\r\n            if (typeof callback === 'function') callback();\r\n        } else {\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n\r\n    window.requestAnimationFrame(step);\r\n}\n\n//# sourceURL=webpack://tlm-gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;